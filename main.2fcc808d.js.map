{"version":3,"sources":["scripts/main.js"],"names":["fieldsClasses","document","querySelectorAll","forEach","field","label","createElement","inputId","lastElementChild","inputIdTitle","htmlFor","id","i","inputName","name","placeholderName","toUpperCase","length","toLowerCase","classList","add","innerText","setAttribute","prepend"],"mappings":";AAAA,aAIA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAFA,IAAMA,EAAgBC,SAASC,iBAAiB,UAEhDF,EAAcG,QAAQ,SAAAC,GACdC,IAAAA,EAAQJ,SAASK,cAAc,SAE/BC,EAAUH,EAAMI,iBAClBC,EAAe,GAEnBJ,EAAMK,QAAUH,EAAQI,GAERJ,IARa,EAQbA,EAAAA,EAAAA,EAAQI,IARK,IAQD,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAjBC,IAAAA,EAAiB,EAAA,MAEtBH,GADE,MAANG,EACoB,IACAA,GAXO,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAiBxB,IAHCC,IAAAA,EAAYN,EAAQO,KACtBC,EAAkBF,EAAU,GAAGG,cAE1BJ,EAAI,EAAGA,EAAIC,EAAUI,OAAQL,IACpCC,EAAUD,KAAOC,EAAUD,GAAGI,cAC1BD,GAAuBF,IAAAA,OAAAA,EAAUD,GAAGM,eACpCH,GAAmBF,EAAUD,GAGnCP,EAAMc,UAAUC,IAAI,eACpBf,EAAMgB,UAAYZ,EAElBF,EAAQe,aAAa,cAAeP,GAEpCX,EAAMmB,QAAQlB","file":"main.2fcc808d.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst fieldsClasses = document.querySelectorAll('.field');\n\nfieldsClasses.forEach(field => {\n  const label = document.createElement('label');\n\n  const inputId = field.lastElementChild;\n  let inputIdTitle = '';\n\n  label.htmlFor = inputId.id;\n\n  for (const i of inputId.id) {\n    i === '-'\n      ? inputIdTitle += ' '\n      : inputIdTitle += i;\n  };\n\n  const inputName = inputId.name;\n  let placeholderName = inputName[0].toUpperCase();\n\n  for (let i = 1; i < inputName.length; i++) {\n    inputName[i] === inputName[i].toUpperCase()\n      ? placeholderName += ` ${inputName[i].toLowerCase()}`\n      : placeholderName += inputName[i];\n  }\n\n  label.classList.add('field-label');\n  label.innerText = inputIdTitle;\n\n  inputId.setAttribute('placeholder', placeholderName);\n\n  field.prepend(label);\n});\n"]}